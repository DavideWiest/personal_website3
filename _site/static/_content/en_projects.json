{
    "projectsHeading": "Convince yourself and read the Case Studies.",
    "projectsPageHeading": "Selected Work and Projects",
    "projectsDescription": "",
    "tagDesc": "Technologies:",
    "categoryDesc": "Categories:",
    "seeallprojects": "See more projects",
    "projects": {
        "contextflow": {
            "name": "ContextFlow",
            "description": "A .NET library for interacting with LLMs (Large Language Models). It provides abstractions for individual modules to work together through dependency injection. With it, you can create more complex prompt chains/pipelines as it simplifies prompt templating and prompt chaining, among other things, through a project-wide fluent interface. The entire project also includes asynchronous counterparts and is tested with 55 NUnit tests. Furthermore, attention was given to developing with a cyclomatic complexity (<6 for methods), class coupling (<10 for methods), and a Maintainability Index of 82. You can find the documentation <a href=\"https://github.com/DavideWiest/ContextFlow/wiki\" target=\"blank\">here</a>.",
            "image": "contextflowDemo.png",
            "image_layout_type": "",
            "link": "https://github.com/DavideWiest/ContextFlow",
            "linkIcon": "github-white.png",
            "linkDesc": "View GitHub Repository",
            "t": ["C#", "NUnit", "Async", "OpenAI", "Serilog"],
            "c": ["Object oriented", "Package", "Infrastructure", "Tests", "Documentation", "LLM"],
            "align": 1,
            "is_casestudy": false
        },
        "finsights": {
            "name": "Finsights",
            "description": "A Newsletter as a Service solution for all kinds of investors to keep in touch with their investments. Users can choose when, and about what they are notified about. They will then receive automatic performance updates for all selected stocks within the chosen time period.",
            "image": "visual.webp",
            "image_layout_type": "phone",
            "link": "https://finsights.info",
            "linkIcon": "medium.png",
            "linkDesc": "Visit Website",
            "t": ["Python", "HTML", "TailwindCSS", "Django", "MongoDB"],
            "c": ["Automation", "Webapp", "Branding", "Logo"],
            "align": 0,
            "is_casestudy": false
        },
        "embyte": {
            "name": "Embyte",
            "description": "The open-source project that allows you to create customizable embeds displaying website information and embed them using iFrames. It was inspired by Discord's embeds. This project caches requests in a PostgreSQL database and utilizes a self-developed caching algorithm.",
            "image": "embyteEmbed.png",
            "image_layout_type": "",
            "link": "https://embyte.davidewiest.com",
            "linkIcon": "",
            "linkDesc": "Visit Website",
            "t": ["C#", "HTML", "MudBlazor", "PostgreSQL"],
            "c": ["Webapp", "Caching", "Algorithm", "Frontend", "Backend"],
            "align": 1,
            "is_casestudy": false
        },
        "pvtimeseries": {
            "name": "Time-Series Forecasting of PV-Growth",
            "description": "Used a series of mutlivariate time series models from the package Darts to forecast the energy production from PV-systems in Germany using 8 historic and 1 predicted metrics. Optimizing mode architecture (N-Beats), evaluating and using the forecast in a research-paper about the consequences of the national growth in pv-systems.",
            "image": "timeSeriesPrediction.jpg",
            "image_layout_type": "",
            "link": "https://github.com/DavideWiest/PV-Ausbau-Zeitreihenanalyse",
            "linkIcon": "github-white.png",
            "linkDesc": "Visit repository",
            "t": ["Python", "Darts", "Pandas", "Matplotlib"],
            "c": ["Data Science", "Time-Series Forecasting"],
            "align": 0,
            "is_casestudy": false
        },
        "reader": {
            "name": "Reader",
            "description": "A highly customizable reader built as a direct alternative to paid speed-readers. Concepts such as chunking, pacing and highlighting are built into this reader. Texts can be imported from files or the clipboard. All data is stored in the website's local storage.",
            "image": "readerShowcase.jpep",
            "image_layout_type": "phone",
            "link": "https://reader.davidewiest.com",
            "linkIcon": "",
            "linkDesc": "Visit Website",
            "t": ["C#", "HTML", "MudBlazor", "Javascript"],
            "c": ["Webapp", "Frontend", "Backend", "Caching"],
            "align": 1,
            "is_casestudy": false
        },
        "instadata": {
            "name": "Instadata",
            "description": "A large instagram scraper built with Django that uses an API to communicate between user and program. The Scraper can be scaled seaminglessly and uses proxies. I built it to gather data for further Data-Science projects, so I used the Nominatim Geolocator and Regex to extract and order as much data as possible.",
            "image": "",
            "image_layout_type": "phone",
            "link": "https://github.com/DavideWiest/idww",
            "linkIcon": "medium.png",
            "linkDesc": "Read article",
            "t": ["Python", "HTML", "Javascript", "Django", "MongoDB"],
            "c": ["Data Science", "Webapp", "API", "Scraper"],
            "align": 0,
            "is_casestudy": true
        }
        "timewise": {
            "name": "TimeWise",
            "description": "An easy to use and open source app that, with the help of an ILP (integer linear programming) API, generates an optimal schedule. Those can then be exported. Developed with a friend.",
            "image": "",
            "image_layout_type": "phone",
            "link": "https://timewise.dev",
            "linkIcon": "",
            "linkDesc": "Webseite besuchen",
            "t": ["C#", "HTML", "MudBlazor"],
            "c": ["Webapp", "ILP", "optimierung"],
            "align": 0,
            "is_casestudy": false
        },
        "decadruck": {
            "name": "DecaDruck (Practice project)",
            "description": "DecaDruck aims to open 3d printing to people without technical knowledge and industry expertise by combining consultation, design and realization into one service. If vistors already have a 3D-file, they can calculate the printing cost, with volume discount included.",
            "image": "visual.webp",
            "image_layout_type": "phone",
            "link": "https://decadruck.davidewiest.com",
            "linkIcon": "medium.png",
            "linkDesc": "Read article",
            "t": ["Python", "HTML", "CSS", "Flask", "Branding"],
            "c": ["Website", "Frontend", "Ecommerce", "Realtime Cost Estimation"],
            "align": 1,
            "is_casestudy": true
        },
        "personal-website": {
            "name": "Personal Website",
            "description": "A complete revision of my personal website. I switched from Flask to Django and now use TailwindCSS. Additionally, the website is available in German and English.",
            "image": "",
            "image_layout_type": "phone",
            "link": "https://github.com/DavideWiest/personal_website2",
            "linkIcon": "github-white.png",
            "linkDesc": "View Github Repository",
            "t": ["Python", "HTML", "TailwindCSS", "Django"],
            "c": ["Website", "Design"],
            "align": 0,
            "is_casestudy": false
        },
    }
}
